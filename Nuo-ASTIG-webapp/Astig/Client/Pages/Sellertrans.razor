@page "/sellertrans"
@inject IProductService ProductService
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject ISellerService SellerService
@inject ITranschunkService TranschunkService
@inject ITransactionsService TransactionsService
@inject IJSRuntime JSRuntime

<h3>ORDERS</h3>

<table class="table">
    <thead>
        <tr>
            <th>Status</th>
            <th>Order#</th>
            <th>Date</th>
            <th>Product</th>
            <th>₱rice</th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>


        @foreach (var t in xtrans)
        {
            <tr>
                <td>@t.Status</td>
                <td>@t.Id</td>
                <td class="fonts small">@t.DateCreated</td>
                <td class="fonts small">@t.Px</td>
                <td>@t.Total</td>
                <td>
                    @t.Cx
                </td>
                <td>
                    <button class="btn btn-secondary" @onclick="chatterx">Contact Buyer</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="text-primary">
    Number of orders: @xtrans.Count
    <br />
    January Earnings: ₱ @xtrans.Sum(item => item.Total)
    <br />
</div>






@code {


    List<Transactions> xtrans = new List<Transactions>();
    List<Transchunk> xchunk = new List<Transchunk>();
    BlazingShop.Shared.Seller seller = new BlazingShop.Shared.Seller();


    protected override async Task OnInitializedAsync()
    {

        string pnp;
        pnp = await LocalStorage.GetItemAsync<string>("PNP");
        if (pnp != "S")
        {
            NavigationManager.NavigateTo("login");

        }

        string e = await LocalStorage.GetItemAsync<string>("credem");
        string p = await LocalStorage.GetItemAsync<string>("credhash");
        string cname = await LocalStorage.GetItemAsync<string>("credname");
        seller = await SellerService.LoginSeller(e, p);


        try
        {
            xchunk = await TranschunkService.GetTranschunk(cname);
            xtrans = await TransactionsService.GetTransactionsSell(cname);

        }
        catch
        {
            Console.WriteLine("GG");
            Console.WriteLine(cname);
        }
    }


    public async void chatterx()
    {

        await JSRuntime.InvokeVoidAsync("initchat");
        StateHasChanged();


    }
}
